using System;
using System.Runtime.InteropServices;

namespace MalwareScanner.Scanners.Amsi
{
	public enum AMSI_RESULT
	{
		AMSI_RESULT_CLEAN = 0,
		AMSI_RESULT_NOT_DETECTED = 1,
		AMSI_RESULT_BLOCKED_BY_ADMIN_START = 16384,
		AMSI_RESULT_BLOCKED_BY_ADMIN_END = 20479,
		AMSI_RESULT_DETECTED = 32768
	}

	public static class AmsiNativeMethods
	{
		[DllImport("Amsi.dll", EntryPoint = "AmsiInitialize", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
		public static extern int AmsiInitialize([MarshalAs(UnmanagedType.LPWStr)]string appName, out AmsiContextSafeHandle amsiContext);

		[DllImport("Amsi.dll", EntryPoint = "AmsiUninitialize", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
		public static extern void AmsiUninitialize(IntPtr amsiContext);

		// Session not really works
		[DllImport("Amsi.dll", EntryPoint = "AmsiOpenSession", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
		public static extern int AmsiOpenSession(AmsiContextSafeHandle amsiContext, out IntPtr session);

		// Session not really works
		[DllImport("Amsi.dll", EntryPoint = "AmsiCloseSession", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
		public static extern void AmsiCloseSession(AmsiContextSafeHandle amsiContext, IntPtr session);

		[DllImport("Amsi.dll", EntryPoint = "AmsiScanString", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
		public static extern int AmsiScanString(IntPtr amsiContext, [InAttribute()] [MarshalAsAttribute(UnmanagedType.LPWStr)]string @string, [InAttribute()] [MarshalAsAttribute(UnmanagedType.LPWStr)]string contentName, IntPtr session, out AMSI_RESULT result);

		[DllImport("Amsi.dll", EntryPoint = "AmsiScanBuffer", CallingConvention = CallingConvention.StdCall, SetLastError = true)]
		public static extern int AmsiScanBuffer(AmsiContextSafeHandle amsiContext, [In] [MarshalAs(UnmanagedType.LPArray)] byte[] buffer, uint length, [In()] [MarshalAs(UnmanagedType.LPWStr)] string contentName, IntPtr session, out AMSI_RESULT result);
	}
}
